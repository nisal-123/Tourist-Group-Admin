<!doctype html>
<html lang="en">
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title><%= title %> â€” Tourist Admin</title>
  <!-- Bootstrap CSS -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
  <!-- Bootstrap Icons -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css" rel="stylesheet">
  <!-- Google Font -->
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700;800&display=swap" rel="stylesheet">
  <!-- Chart.js -->
  <script src="https://cdn.jsdelivr.net/npm/chart.js@4.4.0/dist/chart.umd.min.js"></script>
  <!-- Custom Modern CSS with fallback -->
  <link href="/css/admin-modern.css" rel="stylesheet" onerror="this.onerror=null; loadFallbackCSS(this);">
  
  <!-- Fallback CSS loader script -->
  <script>
    function loadFallbackCSS(failedLink) {
      console.log('CSS file not found, loading fallback styles');
      // Create a style tag with essential CSS
      const fallbackCSS = document.createElement('style');
      fallbackCSS.textContent = `
        :root {
          --primary: #6366f1;
          --primary-dark: #4f46e5;
          --secondary: #f59e0b;
          --gray-50: #f9fafb;
          --gray-100: #f3f4f6;
          --gray-200: #e5e7eb;
          --gray-500: #6b7280;
          --gray-600: #4b5563;
          --gray-700: #374151;
          --gray-800: #1f2937;
        }
        .sidebar { 
          background: var(--gray-800); 
          color: white; 
          min-height: 100vh; 
          width: 280px;
        }
        .sidebar a { 
          color: rgba(255,255,255,0.8); 
          text-decoration: none;
          padding: 0.75rem 1.5rem;
          display: block;
          transition: all 0.3s ease;
        }
        .sidebar a:hover { 
          color: white; 
          background: var(--primary); 
        }
        .main-content { 
          flex: 1; 
          background: var(--gray-50); 
        }
        .content { 
          padding: 2rem; 
        }
        .btn-primary { 
          background: var(--primary); 
          border-color: var(--primary);
        }
        .btn-primary:hover { 
          background: var(--primary-dark); 
          border-color: var(--primary-dark);
        }
        .card { 
          background: white; 
          border: 1px solid var(--gray-200);
          border-radius: 12px;
          box-shadow: 0 1px 3px rgba(0,0,0,0.1);
          margin-bottom: 1.5rem;
        }
        .card-header { 
          background: var(--gray-50); 
          border-bottom: 1.5px solid var(--gray-200);
          padding: 1.25rem 1.5rem;
          font-weight: 600;
          color: var(--gray-700);
        }
        .table { 
          margin-bottom: 0; 
        }
        .table th { 
          background: var(--gray-50); 
          font-weight: 600;
          color: var(--gray-700);
          border-top: none;
        }
        .text-muted { 
          color: var(--gray-500) !important; 
        }
        .alert { 
          border-radius: 8px; 
          border: none;
        }
        .form-control { 
          border-radius: 8px; 
          border: 1.5px solid var(--gray-200);
          padding: 0.75rem 1rem;
        }
        .form-control:focus { 
          border-color: var(--primary); 
          box-shadow: 0 0 0 0.2rem rgba(99, 102, 241, 0.25);
        }
        .navbar-brand { 
          font-weight: 700; 
          font-size: 1.5rem;
          color: var(--gray-800);
        }
        .badge { 
          border-radius: 6px; 
          padding: 0.5rem 0.75rem;
          font-weight: 500;
        }
        .kpi-card { 
          background: white; 
          border-radius: 12px;
          padding: 1.5rem;
          box-shadow: 0 1px 3px rgba(0,0,0,0.1);
          border-left: 4px solid var(--primary);
        }
  `;
      document.head.appendChild(fallbackCSS);
      
      // Try to reload the CSS file after 2 seconds
      setTimeout(() => {
        const newLink = document.createElement('link');
        newLink.rel = 'stylesheet';
        newLink.href = '/css/admin-modern.css';
        newLink.onerror = () => newLink.remove();
        document.head.appendChild(newLink);
      }, 2000);
    }
  </script>
  <!-- AOS Animation Library -->
  <link href="https://unpkg.com/aos@2.3.1/dist/aos.css" rel="stylesheet">
</head>
<body>
  <div class="d-flex">
    <!-- Modern Sidebar -->
    <%- include('partials/sidebar') %>

    <!-- Main Content Area -->
    <main class="main-content flex-grow-1">
      <!-- Modern Header -->
      <%- include('partials/header') %>

      <!-- Content Section -->
      <section class="content">
        <%- body %>
      </section>
    </main>
  </div>

  <!-- Mobile Menu Toggle -->
  <button class="btn btn-primary d-lg-none position-fixed" style="top: 1rem; left: 1rem; z-index: 1001;" id="sidebarToggle">
    <i class="bi bi-list"></i>
  </button>

  <!-- Bootstrap JS -->
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
  <!-- AOS Animation Library -->
  <script src="https://unpkg.com/aos@2.3.1/dist/aos.js"></script>
  <!-- Custom Admin JS -->
  <script>
    // Initialize AOS animations
    AOS.init({
      duration: 800,
      easing: 'ease-in-out',
      once: true
    });

    // Mobile sidebar toggle
    document.getElementById('sidebarToggle')?.addEventListener('click', function() {
      document.querySelector('.sidebar').classList.toggle('open');
    });

    // Close sidebar when clicking outside on mobile
    document.addEventListener('click', function(e) {
      const sidebar = document.querySelector('.sidebar');
      const toggle = document.getElementById('sidebarToggle');
      
      if (window.innerWidth < 1024 && 
          !sidebar.contains(e.target) && 
          !toggle.contains(e.target) && 
          sidebar.classList.contains('open')) {
        sidebar.classList.remove('open');
      }
    });

    // Add loading states to buttons
    document.querySelectorAll('.btn').forEach(btn => {
      btn.addEventListener('click', function() {
        if (this.type === 'submit' || this.classList.contains('btn-primary')) {
          this.classList.add('loading');
          setTimeout(() => {
            this.classList.remove('loading');
          }, 2000);
        }
      });
    });

    // Add hover effects to cards
    document.querySelectorAll('.card, .kpi-card').forEach(card => {
      card.addEventListener('mouseenter', function() {
        this.style.transform = 'translateY(-4px)';
      });
      
      card.addEventListener('mouseleave', function() {
        this.style.transform = 'translateY(0)';
      });
    });
  </script>
</body>
</html>
